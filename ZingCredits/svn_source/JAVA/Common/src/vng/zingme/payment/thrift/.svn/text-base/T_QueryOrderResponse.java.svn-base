/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package vng.zingme.payment.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class T_QueryOrderResponse implements TBase<T_QueryOrderResponse, T_QueryOrderResponse._Fields>, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("T_QueryOrderResponse");

  private static final TField RESPONSE_CODE_FIELD_DESC = new TField("responseCode", TType.I32, (short)1);
  private static final TField TRANSACTION_ID_FIELD_DESC = new TField("transactionID", TType.I64, (short)2);
  private static final TField DESCRIPTION_FIELD_DESC = new TField("description", TType.STRING, (short)3);

  public int responseCode;
  public long transactionID;
  public String description;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements TFieldIdEnum {
    RESPONSE_CODE((short)1, "responseCode"),
    TRANSACTION_ID((short)2, "transactionID"),
    DESCRIPTION((short)3, "description");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESPONSE_CODE
          return RESPONSE_CODE;
        case 2: // TRANSACTION_ID
          return TRANSACTION_ID;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESPONSECODE_ISSET_ID = 0;
  private static final int __TRANSACTIONID_ISSET_ID = 1;
  private BitSet __isset_bit_vector = new BitSet(2);

  public static final Map<_Fields, FieldMetaData> metaDataMap;
  static {
    Map<_Fields, FieldMetaData> tmpMap = new EnumMap<_Fields, FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESPONSE_CODE, new FieldMetaData("responseCode", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I32)));
    tmpMap.put(_Fields.TRANSACTION_ID, new FieldMetaData("transactionID", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.I64)));
    tmpMap.put(_Fields.DESCRIPTION, new FieldMetaData("description", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    FieldMetaData.addStructMetaDataMap(T_QueryOrderResponse.class, metaDataMap);
  }

  public T_QueryOrderResponse() {
  }

  public T_QueryOrderResponse(
    int responseCode,
    long transactionID,
    String description)
  {
    this();
    this.responseCode = responseCode;
    setResponseCodeIsSet(true);
    this.transactionID = transactionID;
    setTransactionIDIsSet(true);
    this.description = description;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public T_QueryOrderResponse(T_QueryOrderResponse other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.responseCode = other.responseCode;
    this.transactionID = other.transactionID;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
  }

  public T_QueryOrderResponse deepCopy() {
    return new T_QueryOrderResponse(this);
  }

  @Override
  public void clear() {
    setResponseCodeIsSet(false);
    this.responseCode = 0;
    setTransactionIDIsSet(false);
    this.transactionID = 0;
    this.description = null;
  }

  public int getResponseCode() {
    return this.responseCode;
  }

  public T_QueryOrderResponse setResponseCode(int responseCode) {
    this.responseCode = responseCode;
    setResponseCodeIsSet(true);
    return this;
  }

  public void unsetResponseCode() {
    __isset_bit_vector.clear(__RESPONSECODE_ISSET_ID);
  }

  /** Returns true if field responseCode is set (has been asigned a value) and false otherwise */
  public boolean isSetResponseCode() {
    return __isset_bit_vector.get(__RESPONSECODE_ISSET_ID);
  }

  public void setResponseCodeIsSet(boolean value) {
    __isset_bit_vector.set(__RESPONSECODE_ISSET_ID, value);
  }

  public long getTransactionID() {
    return this.transactionID;
  }

  public T_QueryOrderResponse setTransactionID(long transactionID) {
    this.transactionID = transactionID;
    setTransactionIDIsSet(true);
    return this;
  }

  public void unsetTransactionID() {
    __isset_bit_vector.clear(__TRANSACTIONID_ISSET_ID);
  }

  /** Returns true if field transactionID is set (has been asigned a value) and false otherwise */
  public boolean isSetTransactionID() {
    return __isset_bit_vector.get(__TRANSACTIONID_ISSET_ID);
  }

  public void setTransactionIDIsSet(boolean value) {
    __isset_bit_vector.set(__TRANSACTIONID_ISSET_ID, value);
  }

  public String getDescription() {
    return this.description;
  }

  public T_QueryOrderResponse setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been asigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESPONSE_CODE:
      if (value == null) {
        unsetResponseCode();
      } else {
        setResponseCode((Integer)value);
      }
      break;

    case TRANSACTION_ID:
      if (value == null) {
        unsetTransactionID();
      } else {
        setTransactionID((Long)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESPONSE_CODE:
      return new Integer(getResponseCode());

    case TRANSACTION_ID:
      return new Long(getTransactionID());

    case DESCRIPTION:
      return getDescription();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESPONSE_CODE:
      return isSetResponseCode();
    case TRANSACTION_ID:
      return isSetTransactionID();
    case DESCRIPTION:
      return isSetDescription();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof T_QueryOrderResponse)
      return this.equals((T_QueryOrderResponse)that);
    return false;
  }

  public boolean equals(T_QueryOrderResponse that) {
    if (that == null)
      return false;

    boolean this_present_responseCode = true;
    boolean that_present_responseCode = true;
    if (this_present_responseCode || that_present_responseCode) {
      if (!(this_present_responseCode && that_present_responseCode))
        return false;
      if (this.responseCode != that.responseCode)
        return false;
    }

    boolean this_present_transactionID = true;
    boolean that_present_transactionID = true;
    if (this_present_transactionID || that_present_transactionID) {
      if (!(this_present_transactionID && that_present_transactionID))
        return false;
      if (this.transactionID != that.transactionID)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(T_QueryOrderResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    T_QueryOrderResponse typedOther = (T_QueryOrderResponse)other;

    lastComparison = Boolean.valueOf(isSetResponseCode()).compareTo(typedOther.isSetResponseCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponseCode()) {
      lastComparison = TBaseHelper.compareTo(this.responseCode, typedOther.responseCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTransactionID()).compareTo(typedOther.isSetTransactionID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransactionID()) {
      lastComparison = TBaseHelper.compareTo(this.transactionID, typedOther.transactionID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = TBaseHelper.compareTo(this.description, typedOther.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // RESPONSE_CODE
          if (field.type == TType.I32) {
            this.responseCode = iprot.readI32();
            setResponseCodeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // TRANSACTION_ID
          if (field.type == TType.I64) {
            this.transactionID = iprot.readI64();
            setTransactionIDIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // DESCRIPTION
          if (field.type == TType.STRING) {
            this.description = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(RESPONSE_CODE_FIELD_DESC);
    oprot.writeI32(this.responseCode);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(TRANSACTION_ID_FIELD_DESC);
    oprot.writeI64(this.transactionID);
    oprot.writeFieldEnd();
    if (this.description != null) {
      oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
      oprot.writeString(this.description);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("T_QueryOrderResponse(");
    boolean first = true;

    sb.append("responseCode:");
    sb.append(this.responseCode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("transactionID:");
    sb.append(this.transactionID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

