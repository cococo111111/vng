/**
 * Autogenerated by Thrift Compiler (0.9.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package vng.bankinggateway.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class T_TransactionReport implements org.apache.thrift.TBase<T_TransactionReport, T_TransactionReport._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("T_TransactionReport");

  private static final org.apache.thrift.protocol.TField BANK_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankCode", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TX_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("txID", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField TX_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("txType", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("time", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField AGENCY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("agencyCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PROVIDER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("providerCode", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField REF_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("refID", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("amount", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField CLIENT_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("clientIP", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BANK_ACCOUNT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankAccountCode", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField BANK_ACCOUNT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("bankAccountNumber", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField TX_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("txStatus", org.apache.thrift.protocol.TType.I16, (short)14);
  private static final org.apache.thrift.protocol.TField RESPONSE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("responseCode", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CONFIRM_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("confirmStatus", org.apache.thrift.protocol.TType.I16, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new T_TransactionReportStandardSchemeFactory());
    schemes.put(TupleScheme.class, new T_TransactionReportTupleSchemeFactory());
  }

  public String bankCode; // required
  public int txID; // required
  public short txType; // required
  public String time; // required
  public String userName; // required
  public String agencyCode; // required
  public String providerCode; // required
  public String refID; // required
  public int amount; // required
  public String clientIP; // required
  public String description; // required
  public String bankAccountCode; // required
  public String bankAccountNumber; // required
  public short txStatus; // required
  public String responseCode; // required
  public short confirmStatus; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BANK_CODE((short)1, "bankCode"),
    TX_ID((short)2, "txID"),
    TX_TYPE((short)3, "txType"),
    TIME((short)4, "time"),
    USER_NAME((short)5, "userName"),
    AGENCY_CODE((short)6, "agencyCode"),
    PROVIDER_CODE((short)7, "providerCode"),
    REF_ID((short)8, "refID"),
    AMOUNT((short)9, "amount"),
    CLIENT_IP((short)10, "clientIP"),
    DESCRIPTION((short)11, "description"),
    BANK_ACCOUNT_CODE((short)12, "bankAccountCode"),
    BANK_ACCOUNT_NUMBER((short)13, "bankAccountNumber"),
    TX_STATUS((short)14, "txStatus"),
    RESPONSE_CODE((short)15, "responseCode"),
    CONFIRM_STATUS((short)16, "confirmStatus");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BANK_CODE
          return BANK_CODE;
        case 2: // TX_ID
          return TX_ID;
        case 3: // TX_TYPE
          return TX_TYPE;
        case 4: // TIME
          return TIME;
        case 5: // USER_NAME
          return USER_NAME;
        case 6: // AGENCY_CODE
          return AGENCY_CODE;
        case 7: // PROVIDER_CODE
          return PROVIDER_CODE;
        case 8: // REF_ID
          return REF_ID;
        case 9: // AMOUNT
          return AMOUNT;
        case 10: // CLIENT_IP
          return CLIENT_IP;
        case 11: // DESCRIPTION
          return DESCRIPTION;
        case 12: // BANK_ACCOUNT_CODE
          return BANK_ACCOUNT_CODE;
        case 13: // BANK_ACCOUNT_NUMBER
          return BANK_ACCOUNT_NUMBER;
        case 14: // TX_STATUS
          return TX_STATUS;
        case 15: // RESPONSE_CODE
          return RESPONSE_CODE;
        case 16: // CONFIRM_STATUS
          return CONFIRM_STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TXID_ISSET_ID = 0;
  private static final int __TXTYPE_ISSET_ID = 1;
  private static final int __AMOUNT_ISSET_ID = 2;
  private static final int __TXSTATUS_ISSET_ID = 3;
  private static final int __CONFIRMSTATUS_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BANK_CODE, new org.apache.thrift.meta_data.FieldMetaData("bankCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TX_ID, new org.apache.thrift.meta_data.FieldMetaData("txID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TX_TYPE, new org.apache.thrift.meta_data.FieldMetaData("txType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.TIME, new org.apache.thrift.meta_data.FieldMetaData("time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENCY_CODE, new org.apache.thrift.meta_data.FieldMetaData("agencyCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVIDER_CODE, new org.apache.thrift.meta_data.FieldMetaData("providerCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REF_ID, new org.apache.thrift.meta_data.FieldMetaData("refID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("amount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLIENT_IP, new org.apache.thrift.meta_data.FieldMetaData("clientIP", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ACCOUNT_CODE, new org.apache.thrift.meta_data.FieldMetaData("bankAccountCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ACCOUNT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("bankAccountNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TX_STATUS, new org.apache.thrift.meta_data.FieldMetaData("txStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.RESPONSE_CODE, new org.apache.thrift.meta_data.FieldMetaData("responseCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONFIRM_STATUS, new org.apache.thrift.meta_data.FieldMetaData("confirmStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(T_TransactionReport.class, metaDataMap);
  }

  public T_TransactionReport() {
  }

  public T_TransactionReport(
    String bankCode,
    int txID,
    short txType,
    String time,
    String userName,
    String agencyCode,
    String providerCode,
    String refID,
    int amount,
    String clientIP,
    String description,
    String bankAccountCode,
    String bankAccountNumber,
    short txStatus,
    String responseCode,
    short confirmStatus)
  {
    this();
    this.bankCode = bankCode;
    this.txID = txID;
    setTxIDIsSet(true);
    this.txType = txType;
    setTxTypeIsSet(true);
    this.time = time;
    this.userName = userName;
    this.agencyCode = agencyCode;
    this.providerCode = providerCode;
    this.refID = refID;
    this.amount = amount;
    setAmountIsSet(true);
    this.clientIP = clientIP;
    this.description = description;
    this.bankAccountCode = bankAccountCode;
    this.bankAccountNumber = bankAccountNumber;
    this.txStatus = txStatus;
    setTxStatusIsSet(true);
    this.responseCode = responseCode;
    this.confirmStatus = confirmStatus;
    setConfirmStatusIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public T_TransactionReport(T_TransactionReport other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetBankCode()) {
      this.bankCode = other.bankCode;
    }
    this.txID = other.txID;
    this.txType = other.txType;
    if (other.isSetTime()) {
      this.time = other.time;
    }
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetAgencyCode()) {
      this.agencyCode = other.agencyCode;
    }
    if (other.isSetProviderCode()) {
      this.providerCode = other.providerCode;
    }
    if (other.isSetRefID()) {
      this.refID = other.refID;
    }
    this.amount = other.amount;
    if (other.isSetClientIP()) {
      this.clientIP = other.clientIP;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetBankAccountCode()) {
      this.bankAccountCode = other.bankAccountCode;
    }
    if (other.isSetBankAccountNumber()) {
      this.bankAccountNumber = other.bankAccountNumber;
    }
    this.txStatus = other.txStatus;
    if (other.isSetResponseCode()) {
      this.responseCode = other.responseCode;
    }
    this.confirmStatus = other.confirmStatus;
  }

  public T_TransactionReport deepCopy() {
    return new T_TransactionReport(this);
  }

  @Override
  public void clear() {
    this.bankCode = null;
    setTxIDIsSet(false);
    this.txID = 0;
    setTxTypeIsSet(false);
    this.txType = 0;
    this.time = null;
    this.userName = null;
    this.agencyCode = null;
    this.providerCode = null;
    this.refID = null;
    setAmountIsSet(false);
    this.amount = 0;
    this.clientIP = null;
    this.description = null;
    this.bankAccountCode = null;
    this.bankAccountNumber = null;
    setTxStatusIsSet(false);
    this.txStatus = 0;
    this.responseCode = null;
    setConfirmStatusIsSet(false);
    this.confirmStatus = 0;
  }

  public String getBankCode() {
    return this.bankCode;
  }

  public T_TransactionReport setBankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

  public void unsetBankCode() {
    this.bankCode = null;
  }

  /** Returns true if field bankCode is set (has been assigned a value) and false otherwise */
  public boolean isSetBankCode() {
    return this.bankCode != null;
  }

  public void setBankCodeIsSet(boolean value) {
    if (!value) {
      this.bankCode = null;
    }
  }

  public int getTxID() {
    return this.txID;
  }

  public T_TransactionReport setTxID(int txID) {
    this.txID = txID;
    setTxIDIsSet(true);
    return this;
  }

  public void unsetTxID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TXID_ISSET_ID);
  }

  /** Returns true if field txID is set (has been assigned a value) and false otherwise */
  public boolean isSetTxID() {
    return EncodingUtils.testBit(__isset_bitfield, __TXID_ISSET_ID);
  }

  public void setTxIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TXID_ISSET_ID, value);
  }

  public short getTxType() {
    return this.txType;
  }

  public T_TransactionReport setTxType(short txType) {
    this.txType = txType;
    setTxTypeIsSet(true);
    return this;
  }

  public void unsetTxType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TXTYPE_ISSET_ID);
  }

  /** Returns true if field txType is set (has been assigned a value) and false otherwise */
  public boolean isSetTxType() {
    return EncodingUtils.testBit(__isset_bitfield, __TXTYPE_ISSET_ID);
  }

  public void setTxTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TXTYPE_ISSET_ID, value);
  }

  public String getTime() {
    return this.time;
  }

  public T_TransactionReport setTime(String time) {
    this.time = time;
    return this;
  }

  public void unsetTime() {
    this.time = null;
  }

  /** Returns true if field time is set (has been assigned a value) and false otherwise */
  public boolean isSetTime() {
    return this.time != null;
  }

  public void setTimeIsSet(boolean value) {
    if (!value) {
      this.time = null;
    }
  }

  public String getUserName() {
    return this.userName;
  }

  public T_TransactionReport setUserName(String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public String getAgencyCode() {
    return this.agencyCode;
  }

  public T_TransactionReport setAgencyCode(String agencyCode) {
    this.agencyCode = agencyCode;
    return this;
  }

  public void unsetAgencyCode() {
    this.agencyCode = null;
  }

  /** Returns true if field agencyCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAgencyCode() {
    return this.agencyCode != null;
  }

  public void setAgencyCodeIsSet(boolean value) {
    if (!value) {
      this.agencyCode = null;
    }
  }

  public String getProviderCode() {
    return this.providerCode;
  }

  public T_TransactionReport setProviderCode(String providerCode) {
    this.providerCode = providerCode;
    return this;
  }

  public void unsetProviderCode() {
    this.providerCode = null;
  }

  /** Returns true if field providerCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProviderCode() {
    return this.providerCode != null;
  }

  public void setProviderCodeIsSet(boolean value) {
    if (!value) {
      this.providerCode = null;
    }
  }

  public String getRefID() {
    return this.refID;
  }

  public T_TransactionReport setRefID(String refID) {
    this.refID = refID;
    return this;
  }

  public void unsetRefID() {
    this.refID = null;
  }

  /** Returns true if field refID is set (has been assigned a value) and false otherwise */
  public boolean isSetRefID() {
    return this.refID != null;
  }

  public void setRefIDIsSet(boolean value) {
    if (!value) {
      this.refID = null;
    }
  }

  public int getAmount() {
    return this.amount;
  }

  public T_TransactionReport setAmount(int amount) {
    this.amount = amount;
    setAmountIsSet(true);
    return this;
  }

  public void unsetAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AMOUNT_ISSET_ID);
  }

  /** Returns true if field amount is set (has been assigned a value) and false otherwise */
  public boolean isSetAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __AMOUNT_ISSET_ID);
  }

  public void setAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AMOUNT_ISSET_ID, value);
  }

  public String getClientIP() {
    return this.clientIP;
  }

  public T_TransactionReport setClientIP(String clientIP) {
    this.clientIP = clientIP;
    return this;
  }

  public void unsetClientIP() {
    this.clientIP = null;
  }

  /** Returns true if field clientIP is set (has been assigned a value) and false otherwise */
  public boolean isSetClientIP() {
    return this.clientIP != null;
  }

  public void setClientIPIsSet(boolean value) {
    if (!value) {
      this.clientIP = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public T_TransactionReport setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getBankAccountCode() {
    return this.bankAccountCode;
  }

  public T_TransactionReport setBankAccountCode(String bankAccountCode) {
    this.bankAccountCode = bankAccountCode;
    return this;
  }

  public void unsetBankAccountCode() {
    this.bankAccountCode = null;
  }

  /** Returns true if field bankAccountCode is set (has been assigned a value) and false otherwise */
  public boolean isSetBankAccountCode() {
    return this.bankAccountCode != null;
  }

  public void setBankAccountCodeIsSet(boolean value) {
    if (!value) {
      this.bankAccountCode = null;
    }
  }

  public String getBankAccountNumber() {
    return this.bankAccountNumber;
  }

  public T_TransactionReport setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

  public void unsetBankAccountNumber() {
    this.bankAccountNumber = null;
  }

  /** Returns true if field bankAccountNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetBankAccountNumber() {
    return this.bankAccountNumber != null;
  }

  public void setBankAccountNumberIsSet(boolean value) {
    if (!value) {
      this.bankAccountNumber = null;
    }
  }

  public short getTxStatus() {
    return this.txStatus;
  }

  public T_TransactionReport setTxStatus(short txStatus) {
    this.txStatus = txStatus;
    setTxStatusIsSet(true);
    return this;
  }

  public void unsetTxStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TXSTATUS_ISSET_ID);
  }

  /** Returns true if field txStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetTxStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __TXSTATUS_ISSET_ID);
  }

  public void setTxStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TXSTATUS_ISSET_ID, value);
  }

  public String getResponseCode() {
    return this.responseCode;
  }

  public T_TransactionReport setResponseCode(String responseCode) {
    this.responseCode = responseCode;
    return this;
  }

  public void unsetResponseCode() {
    this.responseCode = null;
  }

  /** Returns true if field responseCode is set (has been assigned a value) and false otherwise */
  public boolean isSetResponseCode() {
    return this.responseCode != null;
  }

  public void setResponseCodeIsSet(boolean value) {
    if (!value) {
      this.responseCode = null;
    }
  }

  public short getConfirmStatus() {
    return this.confirmStatus;
  }

  public T_TransactionReport setConfirmStatus(short confirmStatus) {
    this.confirmStatus = confirmStatus;
    setConfirmStatusIsSet(true);
    return this;
  }

  public void unsetConfirmStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONFIRMSTATUS_ISSET_ID);
  }

  /** Returns true if field confirmStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetConfirmStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __CONFIRMSTATUS_ISSET_ID);
  }

  public void setConfirmStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONFIRMSTATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BANK_CODE:
      if (value == null) {
        unsetBankCode();
      } else {
        setBankCode((String)value);
      }
      break;

    case TX_ID:
      if (value == null) {
        unsetTxID();
      } else {
        setTxID((Integer)value);
      }
      break;

    case TX_TYPE:
      if (value == null) {
        unsetTxType();
      } else {
        setTxType((Short)value);
      }
      break;

    case TIME:
      if (value == null) {
        unsetTime();
      } else {
        setTime((String)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case AGENCY_CODE:
      if (value == null) {
        unsetAgencyCode();
      } else {
        setAgencyCode((String)value);
      }
      break;

    case PROVIDER_CODE:
      if (value == null) {
        unsetProviderCode();
      } else {
        setProviderCode((String)value);
      }
      break;

    case REF_ID:
      if (value == null) {
        unsetRefID();
      } else {
        setRefID((String)value);
      }
      break;

    case AMOUNT:
      if (value == null) {
        unsetAmount();
      } else {
        setAmount((Integer)value);
      }
      break;

    case CLIENT_IP:
      if (value == null) {
        unsetClientIP();
      } else {
        setClientIP((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case BANK_ACCOUNT_CODE:
      if (value == null) {
        unsetBankAccountCode();
      } else {
        setBankAccountCode((String)value);
      }
      break;

    case BANK_ACCOUNT_NUMBER:
      if (value == null) {
        unsetBankAccountNumber();
      } else {
        setBankAccountNumber((String)value);
      }
      break;

    case TX_STATUS:
      if (value == null) {
        unsetTxStatus();
      } else {
        setTxStatus((Short)value);
      }
      break;

    case RESPONSE_CODE:
      if (value == null) {
        unsetResponseCode();
      } else {
        setResponseCode((String)value);
      }
      break;

    case CONFIRM_STATUS:
      if (value == null) {
        unsetConfirmStatus();
      } else {
        setConfirmStatus((Short)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BANK_CODE:
      return getBankCode();

    case TX_ID:
      return Integer.valueOf(getTxID());

    case TX_TYPE:
      return Short.valueOf(getTxType());

    case TIME:
      return getTime();

    case USER_NAME:
      return getUserName();

    case AGENCY_CODE:
      return getAgencyCode();

    case PROVIDER_CODE:
      return getProviderCode();

    case REF_ID:
      return getRefID();

    case AMOUNT:
      return Integer.valueOf(getAmount());

    case CLIENT_IP:
      return getClientIP();

    case DESCRIPTION:
      return getDescription();

    case BANK_ACCOUNT_CODE:
      return getBankAccountCode();

    case BANK_ACCOUNT_NUMBER:
      return getBankAccountNumber();

    case TX_STATUS:
      return Short.valueOf(getTxStatus());

    case RESPONSE_CODE:
      return getResponseCode();

    case CONFIRM_STATUS:
      return Short.valueOf(getConfirmStatus());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BANK_CODE:
      return isSetBankCode();
    case TX_ID:
      return isSetTxID();
    case TX_TYPE:
      return isSetTxType();
    case TIME:
      return isSetTime();
    case USER_NAME:
      return isSetUserName();
    case AGENCY_CODE:
      return isSetAgencyCode();
    case PROVIDER_CODE:
      return isSetProviderCode();
    case REF_ID:
      return isSetRefID();
    case AMOUNT:
      return isSetAmount();
    case CLIENT_IP:
      return isSetClientIP();
    case DESCRIPTION:
      return isSetDescription();
    case BANK_ACCOUNT_CODE:
      return isSetBankAccountCode();
    case BANK_ACCOUNT_NUMBER:
      return isSetBankAccountNumber();
    case TX_STATUS:
      return isSetTxStatus();
    case RESPONSE_CODE:
      return isSetResponseCode();
    case CONFIRM_STATUS:
      return isSetConfirmStatus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof T_TransactionReport)
      return this.equals((T_TransactionReport)that);
    return false;
  }

  public boolean equals(T_TransactionReport that) {
    if (that == null)
      return false;

    boolean this_present_bankCode = true && this.isSetBankCode();
    boolean that_present_bankCode = true && that.isSetBankCode();
    if (this_present_bankCode || that_present_bankCode) {
      if (!(this_present_bankCode && that_present_bankCode))
        return false;
      if (!this.bankCode.equals(that.bankCode))
        return false;
    }

    boolean this_present_txID = true;
    boolean that_present_txID = true;
    if (this_present_txID || that_present_txID) {
      if (!(this_present_txID && that_present_txID))
        return false;
      if (this.txID != that.txID)
        return false;
    }

    boolean this_present_txType = true;
    boolean that_present_txType = true;
    if (this_present_txType || that_present_txType) {
      if (!(this_present_txType && that_present_txType))
        return false;
      if (this.txType != that.txType)
        return false;
    }

    boolean this_present_time = true && this.isSetTime();
    boolean that_present_time = true && that.isSetTime();
    if (this_present_time || that_present_time) {
      if (!(this_present_time && that_present_time))
        return false;
      if (!this.time.equals(that.time))
        return false;
    }

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_agencyCode = true && this.isSetAgencyCode();
    boolean that_present_agencyCode = true && that.isSetAgencyCode();
    if (this_present_agencyCode || that_present_agencyCode) {
      if (!(this_present_agencyCode && that_present_agencyCode))
        return false;
      if (!this.agencyCode.equals(that.agencyCode))
        return false;
    }

    boolean this_present_providerCode = true && this.isSetProviderCode();
    boolean that_present_providerCode = true && that.isSetProviderCode();
    if (this_present_providerCode || that_present_providerCode) {
      if (!(this_present_providerCode && that_present_providerCode))
        return false;
      if (!this.providerCode.equals(that.providerCode))
        return false;
    }

    boolean this_present_refID = true && this.isSetRefID();
    boolean that_present_refID = true && that.isSetRefID();
    if (this_present_refID || that_present_refID) {
      if (!(this_present_refID && that_present_refID))
        return false;
      if (!this.refID.equals(that.refID))
        return false;
    }

    boolean this_present_amount = true;
    boolean that_present_amount = true;
    if (this_present_amount || that_present_amount) {
      if (!(this_present_amount && that_present_amount))
        return false;
      if (this.amount != that.amount)
        return false;
    }

    boolean this_present_clientIP = true && this.isSetClientIP();
    boolean that_present_clientIP = true && that.isSetClientIP();
    if (this_present_clientIP || that_present_clientIP) {
      if (!(this_present_clientIP && that_present_clientIP))
        return false;
      if (!this.clientIP.equals(that.clientIP))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_bankAccountCode = true && this.isSetBankAccountCode();
    boolean that_present_bankAccountCode = true && that.isSetBankAccountCode();
    if (this_present_bankAccountCode || that_present_bankAccountCode) {
      if (!(this_present_bankAccountCode && that_present_bankAccountCode))
        return false;
      if (!this.bankAccountCode.equals(that.bankAccountCode))
        return false;
    }

    boolean this_present_bankAccountNumber = true && this.isSetBankAccountNumber();
    boolean that_present_bankAccountNumber = true && that.isSetBankAccountNumber();
    if (this_present_bankAccountNumber || that_present_bankAccountNumber) {
      if (!(this_present_bankAccountNumber && that_present_bankAccountNumber))
        return false;
      if (!this.bankAccountNumber.equals(that.bankAccountNumber))
        return false;
    }

    boolean this_present_txStatus = true;
    boolean that_present_txStatus = true;
    if (this_present_txStatus || that_present_txStatus) {
      if (!(this_present_txStatus && that_present_txStatus))
        return false;
      if (this.txStatus != that.txStatus)
        return false;
    }

    boolean this_present_responseCode = true && this.isSetResponseCode();
    boolean that_present_responseCode = true && that.isSetResponseCode();
    if (this_present_responseCode || that_present_responseCode) {
      if (!(this_present_responseCode && that_present_responseCode))
        return false;
      if (!this.responseCode.equals(that.responseCode))
        return false;
    }

    boolean this_present_confirmStatus = true;
    boolean that_present_confirmStatus = true;
    if (this_present_confirmStatus || that_present_confirmStatus) {
      if (!(this_present_confirmStatus && that_present_confirmStatus))
        return false;
      if (this.confirmStatus != that.confirmStatus)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(T_TransactionReport other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    T_TransactionReport typedOther = (T_TransactionReport)other;

    lastComparison = Boolean.valueOf(isSetBankCode()).compareTo(typedOther.isSetBankCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankCode, typedOther.bankCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTxID()).compareTo(typedOther.isSetTxID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTxID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.txID, typedOther.txID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTxType()).compareTo(typedOther.isSetTxType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTxType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.txType, typedOther.txType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTime()).compareTo(typedOther.isSetTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time, typedOther.time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(typedOther.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, typedOther.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgencyCode()).compareTo(typedOther.isSetAgencyCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgencyCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agencyCode, typedOther.agencyCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProviderCode()).compareTo(typedOther.isSetProviderCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProviderCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.providerCode, typedOther.providerCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRefID()).compareTo(typedOther.isSetRefID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.refID, typedOther.refID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmount()).compareTo(typedOther.isSetAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.amount, typedOther.amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClientIP()).compareTo(typedOther.isSetClientIP());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientIP()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientIP, typedOther.clientIP);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, typedOther.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankAccountCode()).compareTo(typedOther.isSetBankAccountCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankAccountCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankAccountCode, typedOther.bankAccountCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankAccountNumber()).compareTo(typedOther.isSetBankAccountNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankAccountNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankAccountNumber, typedOther.bankAccountNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTxStatus()).compareTo(typedOther.isSetTxStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTxStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.txStatus, typedOther.txStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponseCode()).compareTo(typedOther.isSetResponseCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponseCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseCode, typedOther.responseCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConfirmStatus()).compareTo(typedOther.isSetConfirmStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfirmStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.confirmStatus, typedOther.confirmStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("T_TransactionReport(");
    boolean first = true;

    sb.append("bankCode:");
    if (this.bankCode == null) {
      sb.append("null");
    } else {
      sb.append(this.bankCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("txID:");
    sb.append(this.txID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("txType:");
    sb.append(this.txType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("time:");
    if (this.time == null) {
      sb.append("null");
    } else {
      sb.append(this.time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("agencyCode:");
    if (this.agencyCode == null) {
      sb.append("null");
    } else {
      sb.append(this.agencyCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("providerCode:");
    if (this.providerCode == null) {
      sb.append("null");
    } else {
      sb.append(this.providerCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refID:");
    if (this.refID == null) {
      sb.append("null");
    } else {
      sb.append(this.refID);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("amount:");
    sb.append(this.amount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clientIP:");
    if (this.clientIP == null) {
      sb.append("null");
    } else {
      sb.append(this.clientIP);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankAccountCode:");
    if (this.bankAccountCode == null) {
      sb.append("null");
    } else {
      sb.append(this.bankAccountCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankAccountNumber:");
    if (this.bankAccountNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.bankAccountNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("txStatus:");
    sb.append(this.txStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("responseCode:");
    if (this.responseCode == null) {
      sb.append("null");
    } else {
      sb.append(this.responseCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("confirmStatus:");
    sb.append(this.confirmStatus);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class T_TransactionReportStandardSchemeFactory implements SchemeFactory {
    public T_TransactionReportStandardScheme getScheme() {
      return new T_TransactionReportStandardScheme();
    }
  }

  private static class T_TransactionReportStandardScheme extends StandardScheme<T_TransactionReport> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, T_TransactionReport struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BANK_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankCode = iprot.readString();
              struct.setBankCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TX_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.txID = iprot.readI32();
              struct.setTxIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TX_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.txType = iprot.readI16();
              struct.setTxTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.time = iprot.readString();
              struct.setTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AGENCY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agencyCode = iprot.readString();
              struct.setAgencyCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PROVIDER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.providerCode = iprot.readString();
              struct.setProviderCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REF_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.refID = iprot.readString();
              struct.setRefIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.amount = iprot.readI32();
              struct.setAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CLIENT_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientIP = iprot.readString();
              struct.setClientIPIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BANK_ACCOUNT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankAccountCode = iprot.readString();
              struct.setBankAccountCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // BANK_ACCOUNT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankAccountNumber = iprot.readString();
              struct.setBankAccountNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // TX_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.txStatus = iprot.readI16();
              struct.setTxStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RESPONSE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responseCode = iprot.readString();
              struct.setResponseCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CONFIRM_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.confirmStatus = iprot.readI16();
              struct.setConfirmStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, T_TransactionReport struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.bankCode != null) {
        oprot.writeFieldBegin(BANK_CODE_FIELD_DESC);
        oprot.writeString(struct.bankCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TX_ID_FIELD_DESC);
      oprot.writeI32(struct.txID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TX_TYPE_FIELD_DESC);
      oprot.writeI16(struct.txType);
      oprot.writeFieldEnd();
      if (struct.time != null) {
        oprot.writeFieldBegin(TIME_FIELD_DESC);
        oprot.writeString(struct.time);
        oprot.writeFieldEnd();
      }
      if (struct.userName != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.userName);
        oprot.writeFieldEnd();
      }
      if (struct.agencyCode != null) {
        oprot.writeFieldBegin(AGENCY_CODE_FIELD_DESC);
        oprot.writeString(struct.agencyCode);
        oprot.writeFieldEnd();
      }
      if (struct.providerCode != null) {
        oprot.writeFieldBegin(PROVIDER_CODE_FIELD_DESC);
        oprot.writeString(struct.providerCode);
        oprot.writeFieldEnd();
      }
      if (struct.refID != null) {
        oprot.writeFieldBegin(REF_ID_FIELD_DESC);
        oprot.writeString(struct.refID);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
      oprot.writeI32(struct.amount);
      oprot.writeFieldEnd();
      if (struct.clientIP != null) {
        oprot.writeFieldBegin(CLIENT_IP_FIELD_DESC);
        oprot.writeString(struct.clientIP);
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.bankAccountCode != null) {
        oprot.writeFieldBegin(BANK_ACCOUNT_CODE_FIELD_DESC);
        oprot.writeString(struct.bankAccountCode);
        oprot.writeFieldEnd();
      }
      if (struct.bankAccountNumber != null) {
        oprot.writeFieldBegin(BANK_ACCOUNT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.bankAccountNumber);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TX_STATUS_FIELD_DESC);
      oprot.writeI16(struct.txStatus);
      oprot.writeFieldEnd();
      if (struct.responseCode != null) {
        oprot.writeFieldBegin(RESPONSE_CODE_FIELD_DESC);
        oprot.writeString(struct.responseCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CONFIRM_STATUS_FIELD_DESC);
      oprot.writeI16(struct.confirmStatus);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class T_TransactionReportTupleSchemeFactory implements SchemeFactory {
    public T_TransactionReportTupleScheme getScheme() {
      return new T_TransactionReportTupleScheme();
    }
  }

  private static class T_TransactionReportTupleScheme extends TupleScheme<T_TransactionReport> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, T_TransactionReport struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBankCode()) {
        optionals.set(0);
      }
      if (struct.isSetTxID()) {
        optionals.set(1);
      }
      if (struct.isSetTxType()) {
        optionals.set(2);
      }
      if (struct.isSetTime()) {
        optionals.set(3);
      }
      if (struct.isSetUserName()) {
        optionals.set(4);
      }
      if (struct.isSetAgencyCode()) {
        optionals.set(5);
      }
      if (struct.isSetProviderCode()) {
        optionals.set(6);
      }
      if (struct.isSetRefID()) {
        optionals.set(7);
      }
      if (struct.isSetAmount()) {
        optionals.set(8);
      }
      if (struct.isSetClientIP()) {
        optionals.set(9);
      }
      if (struct.isSetDescription()) {
        optionals.set(10);
      }
      if (struct.isSetBankAccountCode()) {
        optionals.set(11);
      }
      if (struct.isSetBankAccountNumber()) {
        optionals.set(12);
      }
      if (struct.isSetTxStatus()) {
        optionals.set(13);
      }
      if (struct.isSetResponseCode()) {
        optionals.set(14);
      }
      if (struct.isSetConfirmStatus()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetBankCode()) {
        oprot.writeString(struct.bankCode);
      }
      if (struct.isSetTxID()) {
        oprot.writeI32(struct.txID);
      }
      if (struct.isSetTxType()) {
        oprot.writeI16(struct.txType);
      }
      if (struct.isSetTime()) {
        oprot.writeString(struct.time);
      }
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetAgencyCode()) {
        oprot.writeString(struct.agencyCode);
      }
      if (struct.isSetProviderCode()) {
        oprot.writeString(struct.providerCode);
      }
      if (struct.isSetRefID()) {
        oprot.writeString(struct.refID);
      }
      if (struct.isSetAmount()) {
        oprot.writeI32(struct.amount);
      }
      if (struct.isSetClientIP()) {
        oprot.writeString(struct.clientIP);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetBankAccountCode()) {
        oprot.writeString(struct.bankAccountCode);
      }
      if (struct.isSetBankAccountNumber()) {
        oprot.writeString(struct.bankAccountNumber);
      }
      if (struct.isSetTxStatus()) {
        oprot.writeI16(struct.txStatus);
      }
      if (struct.isSetResponseCode()) {
        oprot.writeString(struct.responseCode);
      }
      if (struct.isSetConfirmStatus()) {
        oprot.writeI16(struct.confirmStatus);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, T_TransactionReport struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.bankCode = iprot.readString();
        struct.setBankCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.txID = iprot.readI32();
        struct.setTxIDIsSet(true);
      }
      if (incoming.get(2)) {
        struct.txType = iprot.readI16();
        struct.setTxTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.time = iprot.readString();
        struct.setTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.agencyCode = iprot.readString();
        struct.setAgencyCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.providerCode = iprot.readString();
        struct.setProviderCodeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.refID = iprot.readString();
        struct.setRefIDIsSet(true);
      }
      if (incoming.get(8)) {
        struct.amount = iprot.readI32();
        struct.setAmountIsSet(true);
      }
      if (incoming.get(9)) {
        struct.clientIP = iprot.readString();
        struct.setClientIPIsSet(true);
      }
      if (incoming.get(10)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(11)) {
        struct.bankAccountCode = iprot.readString();
        struct.setBankAccountCodeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.bankAccountNumber = iprot.readString();
        struct.setBankAccountNumberIsSet(true);
      }
      if (incoming.get(13)) {
        struct.txStatus = iprot.readI16();
        struct.setTxStatusIsSet(true);
      }
      if (incoming.get(14)) {
        struct.responseCode = iprot.readString();
        struct.setResponseCodeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.confirmStatus = iprot.readI16();
        struct.setConfirmStatusIsSet(true);
      }
    }
  }

}

